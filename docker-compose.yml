services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     target: development
  #   command: npm run start:dev
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - mongodb
  #     - rabbitmq
  #     - elasticsearch
  #     - redis
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - ${PORT}:${PORT}

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - http.port=9200
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/var/lib/elasticsearch
    ports:
      - 9200:9200
    networks:
      - nest-demo-network

  mongodb:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container:/data/db

#Docker Networks
networks:
  # All container connect in a network
  nest-demo-network:
    driver: bridge

volumes:
  db_data: {}
  es_data: {}
  mongodb_data_container:
